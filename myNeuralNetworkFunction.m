function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-Jan-2019 06:25:51.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 1xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = -0.487945556640625;
x1_step1_gain = 1.91799584418625;
x1_step1_ymin = -1;

% Layer 1
b1 = [14.355122719945985;-9.7586230118884316;-7.5630081353354521;-2.9958436586030754;2.4884969262833527;0.19398063722165274;4.2443028786142474;-7.1338382615526914;10.672071411526458;-15.127249481379646];
IW1_1 = [-13.913532595407204;14.865311783949325;14.036242932047948;14.474634880525233;-14.03059210350847;13.998205587884126;14.127497506615766;-14.306083689480584;13.937524275998438;-13.605174437758899];

% Layer 2
b2 = -0.15589340579232838;
LW2_1 = [-0.72666833782914564 0.041448056699635548 -0.018598679822449098 -0.048962259617497922 -0.048800901720368141 -0.0037464195130609687 0.011397957222946762 -0.0066747918760134426 -0.024099719446655805 -0.87683238321057244];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 2.39199941601577;
y1_step1_xoffset = -0.403900146484375;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
